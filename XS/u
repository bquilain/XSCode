#include<iomanip>
#include<iostream>
#include <cstdio>
#include <sstream>
#include <fstream>
#include <TMath.h>
#include "setup.h"
#include "Xsec.cc"
Xsec * xs = new Xsec();
using namespace std;
    //0. No Error, nominal case
    //1. TO DO 
    //2. Dark noise, variations 
    //3. Hit efficiency, variations within the difference data and MC
    //4. Light yield, variation of PE with angle btw data and MC.
    //5. Light yield, Birks quenching effect.
    //6: Beam related background (in fact, this mainly evaluate sand muons)
    //7: 2D reconstruction error
    //8: VetoUpstreamCriteria: nominal=0 planes, vary from 0->2 per 1 plane step
    //9: VetoEdgeCriteria: nominal=80cm, vary 70->100 per 10cm steps
    //10: FVCriteria: nominal=100cm, vary 50->100 per 10 cms steps
    //11: Vertexing, plane tolerance: nominal=2, vary 2->4 per 1 plane steps
    //12: Vertexing, transverse tolerance: nominal=15cm, vary 15cm->20cm per 2.5cm steps
    //13: Track matching, plane tolerance: nominal=4, vary 3->5 per 1 plane steps
    //14: INGRID/PM tracks angle matching: nominal=35째, vary 30째->40째 per 5째 steps
    //15: INGRID/PM tracks transverse position matching: nominal=8.5cm, vary 7.5cm->9.5 per 1cm steps

    //16: Xsec
    //17: Flux
    
 
int main(int argc, char **argv){

  int c=-1;
  bool MC=false;bool Data=false;
  bool SelectionOnly=false;// if true, only the latest part of the analysis (selection & unfolding) are applied
  while ((c = getopt(argc, argv, "mds")) != -1) {
    switch(c){
    case 'm':
      MC=true;
      break;
    case 'd':
      Data=true;
      break;
    case 's':
      SelectionOnly=true;
      break;
    }      
  }  
  char Name1[100], Name2[100];
  char Command001[300], Command002[300], Command003[300], Command004[300], Command005[300], Command006[300];
  char Command01[300], Command02[300], Command03[300], Command04[300], Command05[300], Command06[300];
  char Command1[300], Command2[300], Command3[300], Command4[300], Command5[300], Command6[300], Command7[300], Command8[300], Command9[300], Command11[300], Command12[300], Command13[300],Command14[300], Command15[300], Command16[300], Command17[300], Command18[300];
  char  Command10[300], Command20[300], Command30[300];
  char Name[16];

  xs->Xsec::Initialize();

  ///////////FOR THE PREREQUISITE, SO DO NOT CLEAN FOR EACH ERROR/////////////////////
  sprintf(Command01,"");
  sprintf(Command02,"");
  sprintf(Command03,"");
  sprintf(Command04,"");
  sprintf(Command05,"");
  sprintf(Command06,"");

  if(!SelectionOnly){
    //for(int ErrorType=StartError;ErrorType<=EndError;ErrorType++){
    for(int ErrorType=2;ErrorType<=6;ErrorType++){//TEMP

    
    cout<<endl<<"Error Type="<<ErrorType<<endl;

      
    if(ErrorType==3){
      sprintf(Command01,"/home/bquilain/CC0pi_XS/XS/HitEfficiency -m -i 1 -f 100"); //Generate a file containing MC hit efficiency (XS/files_MCDataComparison/MC_CalibrationPM.root )
      sprintf(Command02,"/home/bquilain/CC0pi_XS/XS/HitEfficiency -r 14510 -t 14510 -i 0 -f 300"); //Generate a file containing Data hit efficiency (/home/bquilain/CC0pi_XS/XS/files_MCDataComparison/MC_CalibrationPM.root )
    }
    else if(ErrorType==4){
      sprintf(Command03,"/home/bquilain/CC0pi_XS/XS/CompareCalibrationsPM -m -i 1 -f 100"); //-> Generate a file containing each hit info for MC (XS/files_MCDataComparison/MC_CalibrationPM.root )
      sprintf(Command04,"/home/bquilain/CC0pi_XS/XS/CompareCalibrationsPM -r 14510 -t 14570 -i 0 -f 300");//-> Generate a file containing each hit info for Data (XS/files_MCDataComparison/Data_CalibrationPM.root )
      sprintf(Command05,"/home/bquilain/CC0pi_XS/XS/GeneratePEAngleDistributions -o /home/bquilain/CC0pi_XS/XS/files/PEXAngle.root");//Read the data and MC files above and create the dependency of PE with angle.
    }
    if(ErrorType==5){
      sprintf(Command06,"#Don't forget to copy your MC two times and change the Birks Constant. The path and name of this MC can be changed in XSFileGenerator.c");
    }


   
      for(int n=0;n<NE[ErrorType];n++){
      double ErrorValue=Start[ErrorType]+n*Step[ErrorType];
     if(MC){
       
       for(int i=1;i<=NMCfiles;i++){
       //for(int i=1;i<=2000;i++){//TEMP
	 sprintf(Command1,"");
	sprintf(Command2,"");
	sprintf(Command3,"");
	sprintf(Command4,"");
	sprintf(Command5,"");
	sprintf(Command6,"");
	sprintf(Command7,"");
	sprintf(Command8,"");
	sprintf(Command9,"");
	sprintf(Command11,"");
	sprintf(Command12,"");
	
	sprintf(Command10,"");
	sprintf(Command20,"");
	sprintf(Command30,"");
	//sprintf(Command40,"");

	
	if(ErrorType==0){//Case w/o error
	  
	    if(i<=500) sprintf(Command1,"/home/bquilain/CC0pi_XS/MC/ingmc_IngridRevReWeightFinal/bin/Linux-g++/IngMC -o /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d.root -i /home/cvson/scraid2/neutfile5d3d2/run1/11bfluka_nd2_numu_ch_%d.nt -m 2 -f 1",i,i);
	    else if(i<=1000) sprintf(Command1,"/home/bquilain/CC0pi_XS/MC/ingmc_IngridRevReWeightFinal/bin/Linux-g++/IngMC -o /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d.root -i /home/cvson/scraid2/neutfile5d3d2/run1add1/11bfluka_nd2_numu_ch_%d.nt -m 2 -f 1",i,i-500);
	    else if(i<=1500) sprintf(Command1,"/home/bquilain/CC0pi_XS/MC/ingmc_IngridRevReWeightFinal/bin/Linux-g++/IngMC -o /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d.root -i /home/cvson/scraid2/neutfile5d3d2/run1add2/11bfluka_nd2_numu_ch_%d.nt -m 2 -f 1",i,i-1000);
	    else sprintf(Command1,"/home/bquilain/CC0pi_XS/MC/ingmc_IngridRevReWeightFinal/bin/Linux-g++/IngMC -o /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d.root -i /home/cvson/scraid2/neutfile5d3d2/run1add3/11bfluka_nd2_numu_ch_%d.nt -m 2 -f 1",i,i-1500);
	 
	  //sprintf(Command1,"bin/Linux-g++/IngMC -o /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d.root -i /export/scraid2/data/bquilain/neutfile_pm/11bfluka_nd2_numu_ch_%d.nt -m 2 -f 2",i,i);
	  sprintf(Command2,"/home/bquilain/CC0pi_XS/PM_Ana/app/IngAddNoisePMMC_new -f /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d.root -o /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise.root",i,i);
	  sprintf(Command3,"/home/bquilain/CC0pi_XS/Reconstruction/app/PMreconRevOfficial -r 14000 -s 0 -f /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise.root -o /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise_recon.root",i,i);
	  sprintf(Command4,"/home/bquilain/CC0pi_XS/Reconstruction/app/PMAnaRevOfficial -r 14000 -s 0 -f /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise_recon.root -o /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise_ana.root",i,i);
	  sprintf(Command5,"source $HOME/T2KSoftware2/T2KReWeight/Run_at_Start.sh");
	  //NEUT 5.3.2
	  sprintf(Command6,"/home/bquilain/CC0pi_XS/XS/XS_CC0pi_Plan -i /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise_ana.root -o /home/bquilain/CC0pi_XS/XS/root_input/XSFormat_Run1_%d_Plan.root -f 1 -n 5 -m",i,i);
	  //NEUT 5.1.4.2
	  //sprintf(Command6,"/home/bquilain/CC0pi_XS/XS/XS_CC0pi_Plan -i /export/scraid2/data/bquilain/MCfiles/PM_MC_Beam%d_BirksCorrectedMIP40_ReWeight_SciBar188_wNoise_KSana_woXtalk.root -o /home/bquilain/CC0pi_XS/XS/root_input/XSFormat_Old_%d_Plan.root -f 1 -n 5 -m",i,i);
			    
	  //sprintf(Command6,"source $HOME/T2KSoftware2/T2KReWeight/Run_at_Start.sh");
	  sprintf(Command7,"$HOME/T2KSoftware2/T2KReWeight/v1r23/app/genWeightsFromINGRID_2015.exe -i /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d.root -o /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_ReWeight2015.root",i,i);
	  //sprintf(Command6,"/home/bquilain/CC0pi_XS/Reconstruction/app/PMAnaRevOfficial -r 14000 -s 0 -f /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise_recon.root -o /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise_ana.root",i,i);
	  //sprintf(Command5,"/home/bquilain/CC0pi_XS/XS/XS_CC0pi -i /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise_ana.root -o /home/bquilain/CC0pi_XS/XS/root_input/XSFormat_Run1_%d.root -f 1 -n 5 -m",i,i);
	  //sprintf(Command6,"/home/bquilain/CC0pi_XS/XS/XS_CC0pi_Plan_BNJDistributions -i /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise_ana.root -o /home/bquilain/CC0pi_XS/XS/root_input/XSFormat_Run1_%d_Plan_BNJ.root -f 1 -n 5 -m",i,i);
	}
	else if(ErrorType==1) continue;
	else if(ErrorType==2){//Dark noise values.
	  sprintf(Command1,"/home/bquilain/CC0pi_XS/XS/IngAddNoisePMMC -f /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d.root -o /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise_Systematics%d_%d.root -n %2.1f",i,i,ErrorType,n,ErrorValue);  
	  sprintf(Command2,"/home/bquilain/CC0pi_XS/Reconstruction/app/PMreconRevOfficial -r 14000 -s 0 -f /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise_Systematics%d_%d.root -o /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise_recon_Systematics%d_%d.root",i,ErrorType,n,i,ErrorType,n);
	  sprintf(Command3,"/home/bquilain/CC0pi_XS/Reconstruction/app/PMAnaRevOfficial -r 14000 -s 0 -f /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise_recon_Systematics%d_%d.root -o /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise_ana_Systematics%d_%d.root",i,ErrorType,n,i,ErrorType,n);
	  sprintf(Command4,"source $HOME/T2KSoftware2/T2KReWeight/Run_at_Start.sh");
	  sprintf(Command5,"/home/bquilain/CC0pi_XS/XS/XS_CC0pi_Plan -i /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise_ana_Systematics%d_%d.root -o /home/bquilain/CC0pi_XS/XS/root_input/XSFormat_Run1_%d_Systematics%d_%d_Plan.root -f 1 -n 5 -m",i,ErrorType,n,i,ErrorType,n);    
	}
	else if(ErrorType==3){//One should give in input the file name of the data/MC difference
	  //The best thing would be just to generate everything w/ an option
	  sprintf(Command3,"/home/bquilain/CC0pi_XS/XS/GenerateHitEfficiencyMask -i /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise_ana.root -o /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise_Systematics%d_%d.root",i,i,ErrorType,n);
	  sprintf(Command4,"/home/bquilain/CC0pi_XS/Reconstruction/app/PMreconRevOfficial -r 14000 -s 0 -f /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise_Systematics%d_%d.root -o /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise_recon_Systematics%d_%d.root",i,ErrorType,n,i,ErrorType,n);
	  sprintf(Command5,"/home/bquilain/CC0pi_XS/Reconstruction/app/PMAnaRevOfficial -r 14000 -s 0 -f /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise_recon_Systematics%d_%d.root -o /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise_ana_Systematics%d_%d.root",i,ErrorType,n,i,ErrorType,n);
	  sprintf(Command6,"source $HOME/T2KSoftware2/T2KReWeight/Run_at_Start.sh");
	  sprintf(Command7,"/home/bquilain/CC0pi_XS/XS/XS_CC0pi_Plan -i /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise_ana_Systematics%d_%d.root -o /home/bquilain/CC0pi_XS/XS/root_input/XSFormat_Run1_%d_Systematics%d_%d_Plan.root -f 1 -n 5 -m",i,ErrorType,n,i,ErrorType,n);    	
	}
	else if(ErrorType==4){//One should give in input the file name of the data/MC difference
	  //The best thing would be just to generate everything w/ an option
	  sprintf(Command1,"source $HOME/T2KSoftware2/T2KReWeight/Run_at_Start.sh");
	  sprintf(Command2,"/home/bquilain/CC0pi_XS/XS/XS_CC0pi_Plan -i /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise_ana.root -o /home/bquilain/CC0pi_XS/XS/root_input/XSFormat_Run1_%d_Systematics%d_%d_Plan.root -f 1 -n 5 -m -e %d -v /home/bquilain/CC0pi_XS/XS/files/PEXAngle.root",i,i,ErrorType,n,ErrorType);

	}
	else if(ErrorType==5){
	  //pre-requisite if you change the MC: do 2 copies and change the Birks constant (cf memo): generate MC w/ Birks constant variation from 0.0208+-0.0023 cm/MeV
	  //ErrorValue=185;
	  	  //1. Change birks constant to minus value in src/IngridResponse.cc: 0.0208->0.0185
	  //2. Run this MC
	    //1. Change birks constant to minus value in src/IngridResponse.cc: 0.0208->0.0231
	    //2. Run this MC

	  if(n==0){
	    sprintf(Command1,"/home/bquilain/CC0pi_XS/MC/ingmc_IngridRevReWeightFinal/Birks_Minus/bin/Linux-g++/IngMC -o /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_Systematics%d_%d.root -i /home/cvson/scraid2/neutfile5d3d2/run1/11bfluka_nd2_numu_ch_%d.nt -m 2 -f 1",i,ErrorType,n,i);
	    sprintf(Command2,"/home/bquilain/CC0pi_XS/PM_Ana/app/IngAddNoisePMMC_new -f /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_Systematics%d_%d.root -o /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise_Systematics%d_%d.root",i,ErrorType,n,i,ErrorType,n);
	    sprintf(Command3,"/home/bquilain/CC0pi_XS/Reconstruction/app/PMreconRevOfficial -r 14000 -s 0 -f /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise_Systematics%d_%d.root -o /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise_recon_Systematics%d_%d.root",i,ErrorType,n,i,ErrorType,n);
	    sprintf(Command4,"/home/bquilain/CC0pi_XS/Reconstruction/app/PMAnaRevOfficial -r 14000 -s 0 -f /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise_recon_Systematics%d_%d.root -o /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise_ana_Systematics%d_%d.root",i,ErrorType,n,i,ErrorType,n);
	    sprintf(Command5,"source $HOME/T2KSoftware2/T2KReWeight/Run_at_Start.sh");
	    sprintf(Command6,"/home/bquilain/CC0pi_XS/XS/XS_CC0pi_Plan -i /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise_ana_Systematics%d_%d.root -o /home/bquilain/CC0pi_XS/XS/root_input/XSFormat_Run1_%d_Systematics%d_%d_Plan.root -f 1 -n 5 -m",i,ErrorType,n,i,ErrorType,n);
	  }
	  if(n==1){
	    //ErrorValue=231;
	    sprintf(Command1,"/home/bquilain/CC0pi_XS/MC/ingmc_IngridRevReWeightFinal/Birks_Plus/bin/Linux-g++/IngMC -o /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_Systematics%d_%d.root -i /home/cvson/scraid2/neutfile5d3d2/run1/11bfluka_nd2_numu_ch_%d.nt -m 2 -f 1",i,ErrorType,n,i);
	    sprintf(Command2,"/home/bquilain/CC0pi_XS/PM_Ana/app/IngAddNoisePMMC_new -f /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_Systematics%d_%d.root -o /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise_Systematics%d_%d.root",i,ErrorType,n,i,ErrorType,n);
	    sprintf(Command3,"/home/bquilain/CC0pi_XS/Reconstruction/app/PMreconRevOfficial -r 14000 -s 0 -f /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise_Systematics%d_%d.root -o /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise_recon_Systematics%d_%d.root",i,ErrorType,n,i,ErrorType,n);
	    sprintf(Command4,"/home/bquilain/CC0pi_XS/Reconstruction/app/PMAnaRevOfficial -r 14000 -s 0 -f /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise_recon_Systematics%d_%d.root -o /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise_ana_Systematics%d_%d.root",i,ErrorType,n,i,ErrorType,n);
	    sprintf(Command5,"source $HOME/T2KSoftware2/T2KReWeight/Run_at_Start.sh");
	    sprintf(Command6,"/home/bquilain/CC0pi_XS/XS/XS_CC0pi_Plan -i /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise_ana_Systematics%d_%d.root -o /home/bquilain/CC0pi_XS/XS/root_input/XSFormat_Run1_%d_Systematics%d_%d_Plan.root -f 1 -n 5 -m",i,ErrorType,n,i,ErrorType,n);
	  }
	}
	else if(ErrorType==6){
	  //sprintf(Command1,"/home/bquilain/CC0pi_XS/XS/CC0piSelection -s 1 -w %2.2f",ErrorValue);
	}
	else if(ErrorType>=7 && ErrorType<=10){
	  sprintf(Command1,"/home/bquilain/CC0pi_XS/Reconstruction/app/PMreconRevOfficial -r 14000 -s 0 -f /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise.root -o /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise_recon_Systematics%d_%d.root -e %d -v %3.1f",i,i,ErrorType,n,ErrorType,ErrorValue);
	  sprintf(Command2,"/home/bquilain/CC0pi_XS/Reconstruction/app/PMAnaRevOfficial -r 14000 -s 0 -f /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise_recon_Systematics%d_%d.root -o /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise_ana_Systematics%d_%d.root",i,ErrorType,n,i,ErrorType,n);
	  sprintf(Command3,"source $HOME/T2KSoftware2/T2KReWeight/Run_at_Start.sh");
	  sprintf(Command4,"/home/bquilain/CC0pi_XS/XS/XS_CC0pi_Plan -i /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise_ana_Systematics%d_%d.root -o /home/bquilain/CC0pi_XS/XS/root_input/XSFormat_Run1_%d_Systematics%d_%d_Plan.root -f 1 -n 5 -m",i,ErrorType,n,i,ErrorType,n);
	}
	else if(ErrorType>=11 && ErrorType<=15){
	  sprintf(Command1,"/home/bquilain/CC0pi_XS/Reconstruction/app/PMAnaRevOfficial -r 14000 -s 0 -f /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise_recon.root -o /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise_ana_Systematics%d_%d.root -e %d -v %3.1f",i,i,ErrorType,n,ErrorType,ErrorValue);
	  sprintf(Command2,"source $HOME/T2KSoftware2/T2KReWeight/Run_at_Start.sh");
	  sprintf(Command3,"/home/bquilain/CC0pi_XS/XS/XS_CC0pi_Plan -i /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise_ana_Systematics%d_%d.root -o /home/bquilain/CC0pi_XS/XS/root_input/XSFormat_Run1_%d_Systematics%d_%d_Plan.root -f 1 -n 5 -m",i,ErrorType,n,i,ErrorType,n);
	}
	else if(ErrorType==16) continue;
		  //sprintf(Command2,"/home/bquilain/CC0pi_XS/XS/XS_CC0pi_Plan -i /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise_ana.root -o /home/bquilain/CC0pi_XS/XS/root_input/XSFormat_Run1_%d_Plan_ReWeight2015.root -f 1 -n 5 -m",i,i);
	  
	else if(ErrorType>=17){
	  if(n!=0 || ErrorType>17) continue;//this is a something only for XS errors. This is because all the error is contain in one file (the files contains nominal tree + Reweight vector) and so, we do not need to generate different files for different sources or for 7 different variations of it (-3,-2,-1,0,1,2,3)sigmas.
	    sprintf(Command1,"source $HOME/T2KSoftware2/T2KReWeight/Run_at_Start.sh");
	    sprintf(Command2,"$HOME/T2KSoftware2/T2KReWeight/v1r23/app/genWeightsFromINGRID_2015.exe -i /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d.root -o /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_ReWeight2015.root",i,i);
	    sprintf(Command3,"/home/bquilain/CC0pi_XS/XS/XS_CC0pi_Plan -i /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_wNoise_ana.root -o /home/bquilain/CC0pi_XS/XS/root_input/XSFormat_Run1_%d_ReWeight2015_Plan.root -f 1 -n 5 -m -x /export/scraid2/data/bquilain/MCfiles/PMMC_Run1_%d_ReWeight2015.root",i,i,i);
	}
	/*
	  sprintf(Command1,"/home/bquilain/CC0pi_XS/XS/CC0piSelection -s 1 -x);

	  sprintf(Command1,"/home/bquilain/CC0pi_XS/XS/CC0piSelection -s 1 -f);
	  for(int iflux=0;iflux<=10;iflux++){
	  sprintf(Command2,"/home/bquilain/CC0pi_XS/XS/UnfoldingOptimisation -d /home/bquilain/CC0pi_XS/XS/files/MCSelected.txt -m /home/bquilain/CC0pi_XS/XS/files/MCSelected_Systematics_Flux%d.txt -n 1",iflux);
	  }
	*/
      
	sprintf(Name1,"/home/bquilain/CC0pi_XS/MC/JobsSystematics/PMMC%d_Systematics%d_%d.sh",i,ErrorType,n);
	sprintf(Name2,"/home/bquilain/CC0pi_XS/MC/JobsSystematics/condorPMMC%d_Systematics%d_%d.sh",i,ErrorType,n);
	if(i==0) cout<<Name1<<" is created, and for other neutfiles also (number of neutfile = NMCFiles: see inc/setup.h"<<endl;
	ofstream ScriptMC(Name1);
	if(ScriptMC)
	  {
	    ScriptMC<<"#!/bin/bash +x"<<endl
		    <<Command1<<endl
		    <<Command2<<endl
		    <<Command3<<endl
		    <<Command4<<endl
		    <<Command5<<endl
		    <<Command6<<endl
		    <<Command7<<endl;
	  }
      
	
	sprintf(Command10,"Executable = /home/bquilain/CC0pi_XS/MC/JobsSystematics/PMMC%d_Systematics%d_%d.sh",i,ErrorType,n);
	sprintf(Command20,"Output = /home/bquilain/CC0pi_XS/MC/JobsSystematics/log_PMMC%d_Systematics%d_%d.txt",i,ErrorType,n);
	sprintf(Command30,"Error = /home/bquilain/CC0pi_XS/MC/JobsSystematics/err_PMMC%d_Systematics%d_%d.txt",i,ErrorType,n);
	ofstream CondorMC(Name2);
	if(CondorMC){
	  CondorMC<<Command10<<endl
		<<"Universe        = vanilla"<<endl
		<<"Rank            = kflops"<<endl
		<<"Getenv          = True"<<endl
		<<"Requirements    = CpuIsBusy == FALSE && (machine != \"scbn00\" && machine != \"scbn01.hepnet.scphys.kyoto-u.ac.jp\" )"<<endl
		<<"Arguments      =  $(Process)"<<endl
		<<Command20<<endl
		<<Command30<<endl
		<<"Notification    = Never"<<endl
		<<"QUEUE 1"<<endl;
	}
	
      }
     }
          
     if(Data){
       ///////////////////////////////////////////DATA//////////////////////////////////////////////////////////////////////////
       char RunNumber[16];
  char SubRunNumber[16];
  int RunNum;
  int SubRunNum;

  ifstream List;
  for(int l=StartRunList;l<=EndRunList;l++){
    sprintf(Name,"/home/bquilain/CC0pi_XS/Data/%d000.txt",l);
    List.open(Name);
    char MIDAS[150];
    if(List.is_open()){
      while(!List.eof()){
	List>>MIDAS;
	//cout<<MIDAS<<", 20e="<<MIDAS[50]<<endl;
	sprintf(RunNumber,"%c%c%c%c%c",MIDAS[50],MIDAS[51],MIDAS[52],MIDAS[53],MIDAS[54]);
	sprintf(SubRunNumber,"%c%c%c%c",MIDAS[56],MIDAS[57],MIDAS[58],MIDAS[59]);
	RunNum=atoi(RunNumber);
	SubRunNum=atoi(SubRunNumber);
	
	if(RunNum<StartRun || RunNum>EndRun) continue;
	if(SubRunNum<StartSubRun || SubRunNum>EndSubRun) continue;
	cout<<RunNumber<<", SubRun="<<SubRunNumber<<endl;
	   
	//sprintf(Name1,"/home/bquilain/CC0pi_XS/MC/JobsSystematics/PMData_%d_%d.sh",RunNum,SubRunNum);
	//sprintf(Name2,"/home/bquilain/CC0pi_XS/MC/JobsSystematics/condorPMData%d_%d.sh",RunNum,SubRunNum);

	sprintf(Command1,"");
	sprintf(Command2,"");
	sprintf(Command3,"");
	sprintf(Command4,"");
	sprintf(Command5,"");
	sprintf(Command6,"");
	sprintf(Command7,"");
	sprintf(Command8,"");
	sprintf(Command9,"");
	sprintf(Command11,"");
	sprintf(Command12,"");
	sprintf(Command13,"");
	sprintf(Command14,"");
	sprintf(Command15,"");
	sprintf(Command16,"");
	sprintf(Command17,"");
	sprintf(Command18,"");
	
	sprintf(Command10,"");
	sprintf(Command20,"");
	sprintf(Command30,"");
	//sprintf(Command40,"");

	if(ErrorType==0){
	  sprintf(Command1,"/home/bquilain/T2KSoftware2/INGRID/v1r1/Linux-x86_64/Calc_MPPC_new_ci_2.exe -r %d -s %d -t 1",RunNum,SubRunNum);
	  sprintf(Command2,"if [ -f /export/scraid2/data/bquilain/calib_root_file/ingrid_%08d_%04d_Calib00.root ]",RunNum,SubRunNum);
	  sprintf(Command3,"then");
	  sprintf(Command4,"/home/bquilain/T2KSoftware2/INGRID/v1r1/Linux-x86_64/DSTMaker.exe -r %d -s %d -t 1",RunNum,SubRunNum);
	  sprintf(Command5,"/home/bquilain/T2KSoftware2/INGRID/v1r1/Linux-x86_64/IngCalib_ADCNLCorrected.exe -r %d -s %d -f /export/scraid2/data/bquilain/dst/ingrid_%08d_%04d.root -o /export/scraid2/data/bquilain/DataNew/ingrid_%08d_%04d_calib.root",RunNum,SubRunNum,RunNum,SubRunNum,RunNum,SubRunNum);
	  sprintf(Command6,"/home/bquilain/T2KSoftware2/INGRID/v1r1/Linux-x86_64/DSTMaker.exe -r %d -s %d -t 1 -p",RunNum,SubRunNum);
	  sprintf(Command7,"/home/bquilain/T2KSoftware2/INGRID/v1r1/Linux-x86_64/IngCalib_ADCNLCorrected.exe -r %d -s %d -f /export/scraid2/data/bquilain/PM/ingrid_%08d_%04d.root -o /export/scraid2/data/bquilain/DataNew/ingrid_%08d_%04d_pmcalib.root -p",RunNum,SubRunNum,RunNum,SubRunNum,RunNum,SubRunNum);
	  sprintf(Command8,"/home/bquilain/CC0pi_XS/Reconstruction/app/IngMergePM -r %d -s %d -f /export/scraid2/data/bquilain/DataNew/ingrid_%08d_%04d_pmcalib.root -a /export/scraid2/data/bquilain/DataNew/ingrid_%08d_%04d_calib.root -o /export/scraid2/data/bquilain/DataNew/ingrid_%08d_%04d_pmmerged.root",RunNum,SubRunNum,RunNum,SubRunNum,RunNum,SubRunNum,RunNum,SubRunNum);
	  ////////////////////////////////////////////////////////RECONSTRUCTION////////////////////////////////////////////////////////////
	  sprintf(Command9,"if [ -f /export/scraid2/data/bquilain/DataNew/ingrid_%08d_%04d_pmmerged.root ]",RunNum,SubRunNum);
	  sprintf(Command11,"then");
	  sprintf(Command12,"/home/bquilain/CC0pi_XS/Reconstruction/app/PMreconRevOfficial -r %d -s %d -f /export/scraid2/data/bquilain/DataNew/ingrid_%08d_%04d_pmmerged.root -o /export/scraid2/data/bquilain/DataNew/ingrid_%08d_%04d_pmmergedKSrecon_woXTalk.root",RunNum,SubRunNum,RunNum,SubRunNum,RunNum,SubRunNum);
	  //////////////////////////////////////////////////////PM ANALYSIS////////////////////////////////////////////////////////////
	  sprintf(Command13,"/home/bquilain/CC0pi_XS/Reconstruction/app/PMAnaRevOfficial -r %d -s %d -f /export/scraid2/data/bquilain/DataNew/ingrid_%08d_%04d_pmmergedKSrecon_woXTalk.root -o /export/scraid2/data/bquilain/DataNew/ingrid_%08d_%04d_pmmergedKSPMana_woXTalk.root",RunNum,SubRunNum,RunNum,SubRunNum,RunNum,SubRunNum);
	  sprintf(Command14,"/home/bquilain/T2KSoftware2/ingrid_format/app/IngAddBSD -r %08d -s %04d -f /export/scraid2/data/bquilain/DataNew/ingrid_%08d_%04d_pmmergedKSPMana_woXTalk.root -o /export/scraid2/data/bquilain/DataNew/ingrid_%08d_%04d_pmmergedKSPManabsd_woXTalk.root -v -p",RunNum,SubRunNum,RunNum,SubRunNum,RunNum,SubRunNum);
	  sprintf(Command15,"source $HOME/T2KSoftware2/T2KReWeight/Run_at_Start.sh");
	  sprintf(Command16,"/home/bquilain/CC0pi_XS/XS/XS_CC0pi_Plan -i /export/scraid2/data/bquilain/DataNew/ingrid_%08d_%04d_pmmergedKSPManabsd_woXTalk.root -o /home/bquilain/CC0pi_XS/XS/root_input/XSFormat_%08d_%04d.root -f 1 -n 5",RunNum,SubRunNum,RunNum,SubRunNum);
	  sprintf(Command17,"fi");
	  sprintf(Command18,"fi");
	}
	else if(ErrorType>=7 && ErrorType<=10){
	  sprintf(Command1,"/home/bquilain/CC0pi_XS/Reconstruction/app/PMreconRevOfficial -r %d -s %d -f /export/scraid2/data/bquilain/DataNew/ingrid_%08d_%04d_pmmerged.root -o /export/scraid2/data/bquilain/DataNew/ingrid_%08d_%04d_pmmergedKSrecon_woXTalk_Systematics%d_%d.root -e %d -v %3.1f",RunNum,SubRunNum,RunNum,SubRunNum,RunNum,SubRunNum,ErrorType,n,ErrorType,ErrorValue);
	  sprintf(Command2,"/home/bquilain/CC0pi_XS/Reconstruction/app/PMAnaRevOfficial -r %d -s %d -f /export/scraid2/data/bquilain/DataNew/ingrid_%08d_%04d_pmmergedKSrecon_woXTalk_Systematics%d_%d.root -o /export/scraid2/data/bquilain/DataNew/ingrid_%08d_%04d_pmmergedKSPMana_woXTalk_Systematics%d_%d.root",RunNum,SubRunNum,RunNum,SubRunNum,ErrorType,n,RunNum,SubRunNum,ErrorType,n);
	  sprintf(Command3,"/home/bquilain/T2KSoftware2/ingrid_format/app/IngAddBSD -r %08d -s %04d -f /export/scraid2/data/bquilain/DataNew/ingrid_%08d_%04d_pmmergedKSPMana_woXTalk_Systematics%d_%d.root -o /export/scraid2/data/bquilain/DataNew/ingrid_%08d_%04d_pmmergedKSPManabsd_woXTalk_Systematics%d_%d.root -v -p",RunNum,SubRunNum,RunNum,SubRunNum,ErrorType,n,RunNum,SubRunNum,ErrorType,n);
	  sprintf(Command4,"source $HOME/T2KSoftware2/T2KReWeight/Run_at_Start.sh");
	  sprintf(Command5,"/home/bquilain/CC0pi_XS/XS/XS_CC0pi_Plan -i /export/scraid2/data/bquilain/DataNew/ingrid_%08d_%04d_pmmergedKSPManabsd_woXTalk_Systematics%d_%d.root -o /home/bquilain/CC0pi_XS/XS/root_input/XSFormat_%08d_%04d_Systematics%d_%d.root -f 1 -n 5",RunNum,SubRunNum,ErrorType,n,RunNum,SubRunNum,ErrorType,n);
	}
	else if(ErrorType>=11 && ErrorType<=15){
	  sprintf(Command1,"/home/bquilain/CC0pi_XS/Reconstruction/app/PMAnaRevOfficial -r %d -s %d -f /export/scraid2/data/bquilain/DataNew/ingrid_%08d_%04d_pmmergedKSrecon_woXTalk_Systematics%d_%d.root -o /export/scraid2/data/bquilain/DataNew/ingrid_%08d_%04d_pmmergedKSPMana_woXTalk_Systematics%d_%d.root",RunNum,SubRunNum,RunNum,SubRunNum,ErrorType,n,RunNum,SubRunNum,ErrorType,n);
	  sprintf(Command2,"/home/bquilain/T2KSoftware2/ingrid_format/app/IngAddBSD -r %08d -s %04d -f /export/scraid2/data/bquilain/DataNew/ingrid_%08d_%04d_pmmergedKSPMana_woXTalk_Systematics%d_%d.root -o /export/scraid2/data/bquilain/DataNew/ingrid_%08d_%04d_pmmergedKSPManabsd_woXTalk_Systematics%d_%d.root -v -p",RunNum,SubRunNum,RunNum,SubRunNum,ErrorType,n,RunNum,SubRunNum,ErrorType,n);
	  sprintf(Command3,"source $HOME/T2KSoftware2/T2KReWeight/Run_at_Start.sh");
	  sprintf(Command4,"/home/bquilain/CC0pi_XS/XS/XS_CC0pi_Plan -i /export/scraid2/data/bquilain/DataNew/ingrid_%08d_%04d_pmmergedKSPManabsd_woXTalk_Systematics%d_%d.root -o /home/bquilain/CC0pi_XS/XS/root_input/XSFormat_%08d_%04d_Systematics%d_%d.root -f 1 -n 5",RunNum,SubRunNum,ErrorType,n,RunNum,SubRunNum,ErrorType,n);
	}
	else continue;
	sprintf(Name1,"/home/bquilain/CC0pi_XS/MC/JobsSystematics/PMData_Run%d_SubRun%d_Systematics%d_%d.sh",RunNum,SubRunNum,ErrorType,n);
	sprintf(Name2,"/home/bquilain/CC0pi_XS/MC/JobsSystematics/condorPMData_Run%d_SubRun%d_Systematics%d_%d.sh",RunNum,SubRunNum,ErrorType,n);
	cout<<"Name="<<Name1<<endl;
	ofstream ScriptData(Name1);
	if(ScriptData)
	  {
	    ScriptData<<"#!/bin/bash +x"<<endl
		      <<Command1<<endl
		  <<Command2<<endl
		  <<Command3<<endl
		  <<Command4<<endl
		  <<Command5<<endl
		  <<Command6<<endl
		  <<Command7<<endl
		  <<Command8<<endl
		  <<Command9<<endl
		  <<Command11<<endl
		  <<Command12<<endl
		  <<Command13<<endl
		  <<Command14<<endl
		  <<Command15<<endl
		  <<Command16<<endl
		  <<Command17<<endl;
	    //<<Command18<<endl;
	  }
	
	
	sprintf(Command10,"Executable = /home/bquilain/CC0pi_XS/MC/JobsSystematics/PMData_Run%d_SubRun%d_Systematics%d_%d.sh",RunNum,SubRunNum,ErrorType,n);
	sprintf(Command20,"Output = /home/bquilain/CC0pi_XS/MC/JobsSystematics/log_PMData_Run%d_SubRun%d_Systematics%d_%d.txt",RunNum,SubRunNum,ErrorType,n);
	sprintf(Command30,"Error = /home/bquilain/CC0pi_XS/MC/JobsSystematics/err_PMData_Run%d_SubRun%d_Systematics%d_%d.txt",RunNum,SubRunNum,ErrorType,n);
	ofstream CondorData(Name2);
	if(CondorData){
	  CondorData<<Command10<<endl
		<<"Universe        = vanilla"<<endl
		<<"Rank            = kflops"<<endl
		<<"Getenv          = True"<<endl
		<<"Requirements    = CpuIsBusy == FALSE && (machine != \"scbn00\" && machine != \"scbn01.hepnet.scphys.kyoto-u.ac.jp\" )"<<endl
		<<"Arguments      =  $(Process)"<<endl
		<<Command20<<endl
		<<Command30<<endl
		<<"Notification    = Never"<<endl
		<<"QUEUE 1"<<endl;
	}	
      }
    }
    List.close();
  }
  //cout<<endl;
     }
    }
  }
  }  


  ///////////////////////////////////PREREQUISITE//////////////////////////////////////////
  sprintf(Name1,"/home/bquilain/CC0pi_XS/MC/JobsSystematics/Prerequisite.sh");
  sprintf(Name2,"/home/bquilain/CC0pi_XS/MC/JobsSystematics/condorPrerequisite.sh");
  cout<<"Name="<<Name1<<endl;
  ofstream Script(Name1);
  if(Script)
    {
      Script<<"#!/bin/bash +x"<<endl
	    <<Command01<<endl
	    <<Command02<<endl
	    <<Command03<<endl
	    <<Command04<<endl;
    }
  
  
  sprintf(Command10,"Executable = /home/bquilain/CC0pi_XS/MC/JobsSystematics/Prerequisite.sh");
  sprintf(Command20,"Output = /home/bquilain/CC0pi_XS/MC/JobsSystematics/log_Prerequisite.txt");
  sprintf(Command30,"Error = /home/bquilain/CC0pi_XS/MC/JobsSystematics/err_Prerequisite.txt");
  ofstream CondorPre(Name2);
  if(CondorPre){
    CondorPre<<Command10<<endl
	  <<"Universe        = vanilla"<<endl
	  <<"Rank            = kflops"<<endl
	  <<"Getenv          = True"<<endl
	  <<"Requirements    = CpuIsBusy == FALSE && (machine != \"scbn00\" && machine != \"scbn01.hepnet.scphys.kyoto-u.ac.jp\" )"<<endl
	  <<"Arguments      =  $(Process)"<<endl
	  <<Command20<<endl
	  <<Command30<<endl
	  <<"Notification    = Never"<<endl
	  <<"QUEUE 1"<<endl;
  }



  
  //////////////////////////////////////POSTREQUISITE////////////////////////////////////////////////. Ne prends pas en compte les Xsec pour l'instant
  for(int ErrorType=StartError;ErrorType<=EndError;ErrorType++){
    for(int n=0;n<NE[ErrorType];n++){
      double ErrorValue=Start[ErrorType]+n*Step[ErrorType];
      ///////////FOR THE POSTREQUISITE, SO SHOULD CLEAN FOR EACH ERROR/////////////////////
      sprintf(Command001,"");
      sprintf(Command002,"");
      sprintf(Command003,"");
      sprintf(Command004,"");
      sprintf(Command005,"");
      sprintf(Command006,"");

      sprintf(Name1,"/home/bquilain/CC0pi_XS/MC/JobsSystematics/Postrequisite_Systematics%d_%d.sh",ErrorType,n);
      sprintf(Name2,"/home/bquilain/CC0pi_XS/MC/JobsSystematics/condorPostrequisite_Systematics%d_%d.sh",ErrorType,n);
      cout<<"Name="<<Name1<<endl;
      ofstream ScriptPost(Name1);
      if(ErrorType==0){
	sprintf(Command001,"/home/bquilain/CC0pi_XS/XS/CC0piSelection -i /home/bquilain/CC0pi_XS/XS/root_input/XSFormat_Run1_%s_Plan.root -o /home/bquilain/CC0pi_XS/XS/files/MCSelected_Systematics%d_%d -s 1 -e %d -v %3.3f -m -p %2.2f","%d",ErrorType,n,ErrorType,ErrorValue,DataPOT);
	sprintf(Command002,"/home/bquilain/CC0pi_XS/XS/CC0piSelection -i /home/bquilain/CC0pi_XS/XS/root_input/XSFormat_%s_%s.root -o /home/bquilain/CC0pi_XS/XS/files/DataSelected_Systematics%d_%d -s 1 -e %d -v %3.3f","%08d","%04d",ErrorType,n,ErrorType,ErrorValue);
	sprintf(Command004,"/home/bquilain/CC0pi_XS/XS/UnfoldingOptimisation_Dvt -d /home/bquilain/CC0pi_XS/XS/files/DataSelected_Systematics%d_%d -m /home/bquilain/CC0pi_XS/XS/files/MCSelected_Systematics%d_%d -o /home/bquilain/CC0pi_XS/XS/files/DataUnfolded_Systematics%d_%d -n 1",ErrorType,n,ErrorType,n,ErrorType,n);
      }
      else if(ErrorType==6) sprintf(Command001,"/home/bquilain/CC0pi_XS/XS/CC0piSelection -i /home/bquilain/CC0pi_XS/XS/root_input/XSFormat_Run1_%s_Plan.root -o /home/bquilain/CC0pi_XS/XS/files/MCSelected_Systematics%d_%d -s 1 -e %d -v %3.3f -m -w %2.2f -p %2.2f","%d",ErrorType,n,ErrorType,ErrorValue,ErrorValue,DataPOT);
      else sprintf(Command001,"/home/bquilain/CC0pi_XS/XS/CC0piSelection -i /home/bquilain/CC0pi_XS/XS/root_input/XSFormat_Run1_%s_Systematics%d_%d_Plan.root -o /home/bquilain/CC0pi_XS/XS/files/MCSelected_Systematics%d_%d -s 1 -e %d -v %3.3f -m -p %2.2f","%d",ErrorType,n,ErrorType,n,ErrorType,ErrorValue,DataPOT);
      if(ErrorType>=7 && ErrorType<=15){
	sprintf(Command002,"/home/bquilain/CC0pi_XS/XS/CC0piSelection -i /home/bquilain/CC0pi_XS/XS/root_input/XSFormat_%s_%s_Systematics%d_%d.root -o /home/bquilain/CC0pi_XS/XS/files/DataSelected_Systematics%d_%d -s 1 -e %d -v %3.3f","%08d","%04d",ErrorType,n,ErrorType,n,ErrorType,ErrorValue);
	sprintf(Command004,"/home/bquilain/CC0pi_XS/XS/UnfoldingOptimisation_Dvt -d /home/bquilain/CC0pi_XS/XS/files/DataSelected_Systematics%d_%d -m /home/bquilain/CC0pi_XS/XS/files/MCSelected_Systematics%d_%d -o /home/bquilain/CC0pi_XS/XS/files/DataUnfolded_Systematics%d_%d -n 1",ErrorType,n,ErrorType,n,ErrorType,n);
      }
      else if(ErrorType==16){
	sprintf(Command001,"/home/bquilain/CC0pi_XS/XS/CC0piSelection -i /home/bquilain/CC0pi_XS/XS/root_input/XSFormat_Run1_%s_Plan.root -o /home/bquilain/CC0pi_XS/XS/files/MCSelected_Systematics%d_%d -s 1 -e %d -v %3.3f -m -p %2.2f","%d",ErrorType,n,ErrorType,ErrorValue,DataPOT);	
      }
      else if(ErrorType>=17){
	//double XsecVariation=ErrorValue-CenterXsecVariations*(ErrorType-Systematics_Xsec_Start);//The variation of Xsec parameter, in #sigma. A number between 0 and 175 - the center of the current systematic source (nominal). For example, for Xsec error source #10, it starts from 7*(10-1)=63 and ends at 70. from 63 to 70, it contains the variariation of -3,-2,-1,0,1,2,3 sigma respectively. The center is then located at 66. For the example of a 2 sigma variation, the substraction will be therefore equal to: 68-66=2, which gives the number of sigmas!        
	sprintf(Command001,"/home/bquilain/CC0pi_XS/XS/CC0piSelection -i /home/bquilain/CC0pi_XS/XS/root_input/XSFormat_Run1_%s_ReWeight2015_Plan.root -o /home/bquilain/CC0pi_XS/XS/files/MCSelected_Systematics%d_%d -s 1 -e %d -v %3.3f -m -p %2.2f","%d",ErrorType,n,ErrorType,ErrorValue,DataPOT);
      }
      sprintf(Command003,"/home/bquilain/CC0pi_XS/XS/UnfoldingOptimisation_Dvt -d /home/bquilain/CC0pi_XS/XS/files/MCSelected_Systematics%d_%d -m /home/bquilain/CC0pi_XS/XS/files/MCSelected_Systematics%d_%d -o /home/bquilain/CC0pi_XS/XS/files/MCUnfolded_Systematics%d_%d -n 1",ErrorType,n,ErrorType,n,ErrorType,n);

      
      if(ScriptPost)
	{
	  ScriptPost<<"#!/bin/bash +x"<<endl
		    <<Command001<<endl
		    <<Command002<<endl
		    <<Command003<<endl
		    <<Command004<<endl;
	}
      
      sprintf(Command10,"Executable = /home/bquilain/CC0pi_XS/MC/JobsSystematics/Postrequisite_Systematics%d_%d.sh",ErrorType,n);
      sprintf(Command20,"Output = /home/bquilain/CC0pi_XS/MC/JobsSystematics/log_Postrequisite_Systematics%d_%d.txt",ErrorType,n);
      sprintf(Command30,"Error = /home/bquilain/CC0pi_XS/MC/JobsSystematics/err_Postrequisite_Systematics%d_%d.txt",ErrorType,n);
      ofstream CondorPost(Name2);
      if(CondorPost){
	CondorPost<<Command10<<endl
	      <<"Universe        = vanilla"<<endl
	      <<"Rank            = kflops"<<endl
	      <<"Getenv          = True"<<endl
	      <<"Requirements    = CpuIsBusy == FALSE && (machine != \"scbn00\" && machine != \"scbn01.hepnet.scphys.kyoto-u.ac.jp\" )"<<endl
	      <<"Arguments      =  $(Process)"<<endl
	      <<Command20<<endl
	      <<Command30<<endl
	      <<"Notification    = Never"<<endl
	      <<"QUEUE 1"<<endl;
      }
    }
  }




  //////////////////////////////////////STATISTICAL UNCERTAINTY////////////////////////////////////////////////.
  if(EStatistics){
    for(int n=0;n<NStatisticalVariations;n++){
      sprintf(Command001,"");

      sprintf(Name1,"/home/bquilain/CC0pi_XS/MC/JobsSystematics/Postrequisite_Statistics%d.sh",n);
      sprintf(Name2,"/home/bquilain/CC0pi_XS/MC/JobsSystematics/condorPostrequisite_Statistics%d_%d.sh",n);
      cout<<"Name="<<Name1<<endl;
      ofstream ScriptPost(Name1);
      sprintf(Command001,"/home/bquilain/CC0pi_XS/XS/UnfoldingOptimisation_Dvt -d /home/bquilain/CC0pi_XS/XS/files/MCSelected_Systematics0_0 -m /home/bquilain/CC0pi_XS/XS/files/MCSelected_Systematics0_0 -o /home/bquilain/CC0pi_XS/XS/files/MCUnfolded_Statistics%d -n 1 -s 1",n);

      
      if(ScriptPost)
	{
	  ScriptPost<<"#!/bin/bash +x"<<endl
		    <<Command001<<endl;
	}
      
      sprintf(Command10,"Executable = /home/bquilain/CC0pi_XS/MC/JobsSystematics/Postrequisite_Statistics%d.sh",n);
      sprintf(Command20,"Output = /home/bquilain/CC0pi_XS/MC/JobsSystematics/log_Postrequisite_Statistics%d.txt",n);
      sprintf(Command30,"Error = /home/bquilain/CC0pi_XS/MC/JobsSystematics/err_Postrequisite_Statistics%d.txt",n);

      ofstream CondorPost(Name2);
      if(CondorPost){
	CondorPost<<Command10<<endl
	      <<"Universe        = vanilla"<<endl
	      <<"Rank            = kflops"<<endl
	      <<"Getenv          = True"<<endl
	      <<"Requirements    = CpuIsBusy == FALSE && (machine != \"scbn00\" && machine != \"scbn01.hepnet.scphys.kyoto-u.ac.jp\" )"<<endl
	      <<"Arguments      =  $(Process)"<<endl
	      <<Command20<<endl
	      <<Command30<<endl
	      <<"Notification    = Never"<<endl
	      <<"QUEUE 1"<<endl;
      }
    }
  }

  
}
